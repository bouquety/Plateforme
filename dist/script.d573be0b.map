{"version":3,"sources":["js/script.js"],"names":["couleur","p","foncier2","ol","layer","Vector","source","format","GeoJSON","features","style","feature","res","property","get","Style","stroke","Stroke","color","width","fill","Fill","map","Map","target","layers","Tile","Stamen","title","view","View","center","proj","fromLonLat","zoom","minZoom","maxZoom","controls","control","defaults","extend","ScaleLine","className","document","getElementById","addEventListener","evt","forEachFeatureAtPixel","pixel","Nature","i","temp_Nature","getElementsByTagName","selected","options","innerHTML","splice","forEach","item","index","array","Suppr","confirm","$","ajax","url","type","data","x","click","e","dataType","success","code_html","statut","window","onload","loadJSON","loadFeaturedos","error","resultat","erreur","alert","typeSelect","onchange","removeInteraction","draw","addInteraction"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAIA,OAAO,GAAG,SAAVA,OAAU,CAAUC,CAAV,EAAa;AACzB,MAAIA,CAAC,IAAI,iBAAT,EAA4B;AAC1B,WAAO,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,CAAhB,CAAP;AACD,GAFD,MAEO,IAAIA,CAAC,IAAI,qBAAT,EAAgC;AACrC,WAAO,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,CAAhB,CAAP;AACD,GAFM,MAEA;AACL,WAAO,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,CAAhB,CAAP;AACD;AACF,CARD;;AAUA,IAAIC,QAAQ,GAAG,IAAIC,EAAE,CAACC,KAAH,CAASC,MAAb,CAAoB;AACjCC,EAAAA,MAAM,EAAE,IAAIH,EAAE,CAACG,MAAH,CAAUD,MAAd,CAAqB;AAC3BE,IAAAA,MAAM,EAAE,IAAIJ,EAAE,CAACI,MAAH,CAAUC,OAAd,EADmB;AAE3BC,IAAAA,QAAQ,EAAE;AAFiB,GAArB,CADyB;AAKjCC,EAAAA,KAAK,EAAE,eAAUC,OAAV,EAAmBC,GAAnB,EAAwB;AAC7BC,IAAAA,QAAQ,GAAGF,OAAO,CAACG,GAAR,CAAY,QAAZ,CAAX;AACA,WAAO,IAAIX,EAAE,CAACO,KAAH,CAASK,KAAb,CAAmB;AACxBC,MAAAA,MAAM,EAAE,IAAIb,EAAE,CAACO,KAAH,CAASO,MAAb,CAAoB;AAC1BC,QAAAA,KAAK,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,CAAb,CADmB;AAE1BC,QAAAA,KAAK,EAAE;AAFmB,OAApB,CADgB;AAKxBC,MAAAA,IAAI,EAAE,IAAIjB,EAAE,CAACO,KAAH,CAASW,IAAb,CAAkB;AACtBH,QAAAA,KAAK,EAAElB,OAAO,CAACa,QAAD;AADQ,OAAlB;AALkB,KAAnB,CAAP;AASD;AAhBgC,CAApB,CAAf,EAkBA;;AACA,IAAIS,GAAG,GAAG,IAAInB,EAAE,CAACoB,GAAP,CAAW;AACnBC,EAAAA,MAAM,EAAE,KADW;AAEnBC,EAAAA,MAAM,EAAE,CACN,IAAItB,EAAE,CAACC,KAAH,CAASsB,IAAb,CAAkB;AAChBpB,IAAAA,MAAM,EAAE,IAAIH,EAAE,CAACG,MAAH,CAAUqB,MAAd,CAAqB;AAC3BvB,MAAAA,KAAK,EAAE;AADoB,KAArB,CADQ;AAIhBwB,IAAAA,KAAK,EAAE;AAJS,GAAlB,CADM,EAON1B,QAPM,CAFW;AAanB2B,EAAAA,IAAI,EAAE,IAAI1B,EAAE,CAAC2B,IAAP,CAAY;AAChB;AACA;AACA;AACA;AACAC,IAAAA,MAAM,EAAE5B,EAAE,CAAC6B,IAAH,CAAQC,UAAR,CAAmB,CAAC,CAAD,EAAI,EAAJ,CAAnB,CALQ;AAMhBC,IAAAA,IAAI,EAAE,CANU;AAOhBC,IAAAA,OAAO,EAAE,CAPO;AAQhBC,IAAAA,OAAO,EAAE;AARO,GAAZ,CAba;AAuBnBC,EAAAA,QAAQ,EAAElC,EAAE,CAACmC,OAAH,CAAWC,QAAX,GAAsBC,MAAtB,CAA6B,CACrC,IAAIrC,EAAE,CAACmC,OAAH,CAAWG,SAAf,CAAyB;AAAEC,IAAAA,SAAS,EAAE,eAAb;AAA8BlB,IAAAA,MAAM,EAAEmB,QAAQ,CAACC,cAAT,CAAwB,YAAxB;AAAtC,GAAzB,CADqC,CAA7B;AAvBS,CAAX,CAAV,EA4BA;;AACAtB,GAAG,CAACuB,gBAAJ,CAAqB,OAArB,EAA8B,UAAUC,GAAV,EAAe;AAC3CxB,EAAAA,GAAG,CAACyB,qBAAJ,CAA0BD,GAAG,CAACE,KAA9B,EAAqC,UAAUrC,OAAV,EAAmBP,KAAnB,EAA0B;AAC/D;AACE,QAAI6C,MAAM,GAAG,CAAC,SAAD,EAAY,iBAAZ,EAA8B,qBAA9B,CAAb,CAF6D,CAGjE;;AACA,QAAIC,CAAC,GAAG,CAAR,CAJiE,CAK7D;;AACD,QAAIC,WAAW,GAAGR,QAAQ,CAACS,oBAAT,CAA8B,QAA9B,EAAwC,CAAxC,EAA2CC,QAA3C,GAAsD1C,OAAO,CAACG,GAAR,CAAY,QAAZ,CAAxE;AACA6B,IAAAA,QAAQ,CAACS,oBAAT,CAA8B,QAA9B,EAAwC,CAAxC,EAA2CE,OAA3C,CAAmDJ,CAAnD,EAAsDK,SAAtD,GAAkEJ,WAAlE,CAP8D,CAQ7D;;AACAF,IAAAA,MAAM,CAACO,MAAP,CAAc,CAAd,EAAiB,CAAjB,EAAoBL,WAApB,EAT6D,CAU7D;;AACAF,IAAAA,MAAM,CAACQ,OAAP,CAAe,UAASC,IAAT,EAAeC,KAAf,EAAsBC,KAAtB,EAA6B;AACzC;AACD,UAAIF,IAAI,IAAIP,WAAZ,EAAwB;AACtB;AACAD,QAAAA,CAAC,GAAGA,CAAC,GAAE,CAAP,CAFsB,CAGtB;;AACAP,QAAAA,QAAQ,CAACS,oBAAT,CAA8B,QAA9B,EAAwC,CAAxC,EAA2CE,OAA3C,CAAmDJ,CAAnD,EAAsDK,SAAtD,GAAmEG,IAAnE;AACD;AACF,KARD,EAX6D,CAoB7D;;AACCf,IAAAA,QAAQ,CAACS,oBAAT,CAA8B,aAA9B,EAA6CG,SAA7C,GAAyD5C,OAAO,CAACG,GAAR,CAAY,UAAZ,CAAzD;AACF6B,IAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCW,SAApC,GAAgD5C,OAAO,CAACG,GAAR,CAAY,UAAZ,CAAhD;AAGC6B,IAAAA,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCW,SAAxC,GAAoD5C,OAAO,CAACG,GAAR,CAAY,QAAZ,CAApD;AACA6B,IAAAA,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCW,SAAnC,GAA+C5C,OAAO,CAACG,GAAR,CAAY,IAAZ,CAA/C;AAGD,GA7BD;AA8BD,CA/BD;;AAiCA,SAAS+C,KAAT,GAAgB;AAChB,MAAIC,OAAO,CAAC,qDAAD,CAAX,EACA;AACEC,IAAAA,CAAC,CAACC,IAAF,CAAO;AACLC,MAAAA,GAAG,EAAG,gBADD;AAELC,MAAAA,IAAI,EAAG,MAFF;AAGLC,MAAAA,IAAI,EAAG,UAAUC;AAHZ,KAAP;AAKD,GAPD,MASA,CACC;AAEA,EAKD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAL,CAAC,CAAC,QAAD,CAAD,CAAYM,KAAZ,CAAkB,UAASC,CAAT,EAAW;AAC3BP,EAAAA,CAAC,CAACC,IAAF,CAAO;AACLC,IAAAA,GAAG,EAAG,iBADD;AACoB;AACzBC,IAAAA,IAAI,EAAG,KAFF;AAES;AACdK,IAAAA,QAAQ,EAAG,MAHN;AAILJ,IAAAA,IAAI,EAAG,UAAUA,IAJZ;AAMLK,IAAAA,OAAO,EAAG,iBAASC,SAAT,EAAoBC,MAApB,EAA2B;AAC9BC,MAAAA,MAAM,CAACC,MAAP,GAAgBC,QAAQ,CAACC,cAAD,CAAxB;AAEN,KATI;AAWLC,IAAAA,KAAK,EAAG,eAASC,QAAT,EAAmBN,MAAnB,EAA2BO,MAA3B,EAAkC;AAC9CC,MAAAA,KAAK,CAAE,OAAF,CAAL;AACK,KAbI,CAcJ;;AAdI,GAAP;AAgBD,CAjBD,GAmBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;;;;;AAIAC,UAAU,CAACC,QAAX,GAAsB,UAASd,CAAT,EAAY;AAChChD,EAAAA,GAAG,CAAC+D,iBAAJ,CAAsBC,IAAtB;AACAC,EAAAA,cAAc;AACf,CAHD;;AAKAA,cAAc","file":"script.d573be0b.map","sourceRoot":"..","sourcesContent":["\r\n\r\n\r\nvar couleur = function (p) {\r\n  if (p == \"Parcelle bÃ¢tie\") {\r\n    return [200, 102, 102, 1]\r\n  } else if (p == \"Parcelle non bÃ¢tie\") {\r\n    return [255, 173, 102, 1]\r\n  } else {\r\n    return [128, 128, 128, 1]\r\n  }\r\n}\r\n\r\nvar foncier2 = new ol.layer.Vector({\r\n  source: new ol.source.Vector({\r\n    format: new ol.format.GeoJSON(),\r\n    features: []\r\n  }),\r\n  style: function (feature, res) {\r\n    property = feature.get(\"nature\");\r\n    return new ol.style.Style({\r\n      stroke: new ol.style.Stroke({\r\n        color: [40, 40, 40, 1],\r\n        width: 0.3\r\n      }),\r\n      fill: new ol.style.Fill({\r\n        color: couleur(property)\r\n      })\r\n    })\r\n  }\r\n});\r\n// déclaration de la carte\r\nvar map = new ol.Map({\r\n  target: 'map',\r\n  layers: [\r\n    new ol.layer.Tile({\r\n      source: new ol.source.Stamen({\r\n        layer: 'terrain'\r\n      }),\r\n      title: 'terrain'\r\n    }),\r\n    foncier2\r\n\r\n\r\n  ],\r\n  view: new ol.View({\r\n    //  dataProjection: 'EPSG:4326',\r\n    //  featureProjection: 'EPSG:3457',\r\n    // center: [0, 0],\r\n    // zoom: 2\r\n    center: ol.proj.fromLonLat([2, 48]),\r\n    zoom: 6,\r\n    minZoom: 5,\r\n    maxZoom: 22,\r\n  }),\r\n  controls: ol.control.defaults().extend([\r\n    new ol.control.ScaleLine({ className: 'ol-scale-line', target: document.getElementById('scale-line') })\r\n  ]),\r\n});\r\n\r\n//Interaction avec la carte\r\nmap.addEventListener(\"click\", function (evt) {\r\n  map.forEachFeatureAtPixel(evt.pixel, function (feature, layer) { \r\n  // Création de la liste de nature des parcelles \r\n    var Nature = ['Zone AU', 'Parcelle bÃ¢tie','Parcelle non bÃ¢tie'];\r\n// On initialise notre compteur à 0\r\nvar i = 0;\r\n    // On assigne la nature de la parcelle cliqué par l'utilisateur dans la variable temp_Nature\r\n   var temp_Nature = document.getElementsByTagName('option')[0].selected = feature.get(\"nature\");\r\n   document.getElementsByTagName('select')[0].options[i].innerHTML = temp_Nature;\r\n    // On ajoute cette nature en première position de la liste Nature\r\n    Nature.splice(0, 0, temp_Nature);\r\n    // On parcours notre liste\r\n    Nature.forEach(function(item, index, array) {\r\n       // Pour chaque item de la liste nature on se demande si l'item est différent de la parcelle cliqué par l'utilisateur\r\n      if (item != temp_Nature){\r\n        // On augmente notre compteur qui va nous servir à quelle position on affiche les autres natures de la parcelle\r\n        i = i +1 \r\n        // On affiche la nature parcellaire différent  de la parcelle cliqué par l'utilisateur\r\n        document.getElementsByTagName('select')[0].options[i].innerHTML = (item);\r\n      }\r\n    });\r\n    // Récupération des champs et affichages des champs au niveau de leur ID défini dans le fichier HTML\r\n     document.getElementsByTagName(\"placeholder\").innerHTML = feature.get(\"nbr_lgmt\");\r\n   document.getElementById(\"logement\").innerHTML = feature.get(\"nbr_lgmt\");\r\n\r\n\r\n    document.getElementById(\"localisation\").innerHTML = feature.get(\"libgeo\");\r\n    document.getElementById(\"id_parc\").innerHTML = feature.get(\"id\");\r\n\r\n    \r\n  })\r\n});\r\n\r\nfunction Suppr(){\r\nif (confirm(\"Êtes-vous sûr de vouloir supprimer cette parcelle ?\")) \r\n{\r\n  $.ajax({\r\n    url : 'Suppresion.php', \r\n    type : 'POST',\r\n    data : 'id = ' + x\r\n });\r\n} \r\nelse \r\n{\r\n}\r\n\r\n}\r\n\r\n\r\n\r\n\r\n// A optimiser /////////////////////////////////////////////////////////////////\r\n// function loadFeaturedos(data) {\r\n//   var myData = JSON.parse(data);\r\n//   //Inserez ici votre code de traitement de la donnee\r\n//   //Elle se traite comme pour n'importe quel objet json\r\n//   foncier2.getSource().clear();\r\n//   foncier2.getSource().addFeatures(foncier2.getSource().getFormat().readFeatures(myData, {\r\n//     dataProjection: 'EPSG:4326',\r\n//     featureProjection: 'EPSG:3857'\r\n//   }));\r\n//   foncier2.getSource().refresh();\r\n//   // map.getView().fit(foncier2.getSource().getExtent());\r\n// }\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n$(\"#envoi\").click(function(e){\r\n  $.ajax({\r\n    url : 'visualiser.html', // La ressource ciblée\r\n    type : 'GET', // Le type de la requête HTTP\r\n    dataType : 'html',\r\n    data : 'data=' + data,\r\n\r\n    success : function(code_html, statut){\r\n           window.onload = loadJSON(loadFeaturedos);\r\n\r\n    },\r\n\r\n    error : function(resultat, statut, erreur){\r\nalert (\"echec\");\r\n    }\r\n     // Le type de données à recevoir, ici, du HTML.\r\n });\r\n});\r\n\r\n// window.onload = loadJSON(toggle_text), loadJSON(loadFeatures);\r\n//pour executer le tout, il vous faudra employer la fonction exemple en callback\r\n//par ex : loadJSON(exemple)\r\n// The features are not added to a regular vector layer/source,\r\n// but to a feature overlay which holds a collection of features.\r\n// This collection is passed to the modify and also the draw\r\n// interaction, so that both can add or modify features.\r\n\r\n\r\n\r\n/**\r\n * Let user change the geometry type.\r\n * @param {Event} e Change event.\r\n */\r\ntypeSelect.onchange = function(e) {\r\n  map.removeInteraction(draw);\r\n  addInteraction();\r\n};\r\n\r\naddInteraction();"]}